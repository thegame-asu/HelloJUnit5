buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M5'
    runtime files(org.gradle.internal.jvm.Jvm.current().toolsJar)
  }
}

repositories {
  mavenCentral()
}

ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '4.12.2'
ext.junitPlatformVersion = '1.0.2'
ext.junitJupiterVersion  = '5.0.2'
ext.log4jVersion         = '2.6.2'
ext.logbackVersion       = '1.2.3'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.junit.platform.gradle.plugin'

jar {
  baseName = 'HelloJUnit5'
  version = '1.0-SNAPSHOT'
}

compileTestJava {
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
  options.compilerArgs += '-parameters'
}

junitPlatform {
  platformVersion '1.0.2'
  filters {
    engines {
      // include 'junit-jupiter', 'junit-vintage'
      // exclude 'custom-engine'
    }
    tags {
      // include 'fast'
      exclude 'slow'
    }
    // includeClassNamePattern '.*Test'
  }
  // enableStandardTestTask true
  // reportsDir file('build/test-results/junit-platform') // this is the default
  logManager 'org.apache.logging.log4j.jul.LogManager'
}

dependencies {
  // JUnit Jupiter API and TestEngine implementation
  testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
  testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
  
  testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")

  // If you also want to support JUnit 3 and JUnit 4 tests
  testCompile("junit:junit:${junit4Version}")
  testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")

  testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
  testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
  
  testCompile("ch.qos.logback:logback-classic:${logbackVersion}")
}

task wrapper(type: Wrapper) {
  description = 'Generates gradlew[.bat] scripts'
  gradleVersion = '3.0'
}
